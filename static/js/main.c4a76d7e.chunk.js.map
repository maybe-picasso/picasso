{"version":3,"sources":["types/enums.ts","store/models/common.ts","store/models/room.ts","core/socket.ts","helpers/utils.ts","helpers/env.ts","store/models/game.ts","store/models/gamePoint.ts","store/models/chat.ts","constants/index.ts","helpers/storage.ts","store/models/tools.ts","pages/Room/containers/CanvasContainer/index.tsx","store/models/index.ts","store/index.ts","routes/paths.ts","pages/Home/index.tsx","components/PageTemplate/index.tsx","core/event.ts","pages/Room/hooks/useGameHandler.tsx","pages/Room/hooks/useGameStatus.tsx","pages/Room/hooks/useGameSync.tsx","pages/Room/hooks/useMyTurn.tsx","pages/Room/hooks/usePainterInfo.tsx","core/drawing/drawing-core.ts","core/drawing/drawing.ts","pages/Room/containers/ChatContainer/index.tsx","pages/Room/components/GameQuestion/index.tsx","pages/Room/components/GameRound/index.tsx","assets/sound/tick-tock.mp3","pages/Room/components/GameTimer/index.tsx","pages/Room/components/PaletteColor/index.tsx","pages/Room/components/PaletteSlider/index.tsx","pages/Room/components/ProfileAvatar/index.tsx","pages/Room/components/overlay/ResultLayer/index.tsx","pages/Room/components/overlay/NextTurnContent/index.tsx","pages/Room/components/overlay/CompleteContent/index.tsx","pages/Room/components/overlay/GameOverContent/index.tsx","pages/Room/containers/GameContentContainer/index.tsx","pages/Room/containers/GameStatusContainer/index.tsx","hooks/useMotion.ts","pages/Room/containers/GateContainer/index.tsx","pages/Room/containers/HeaderContainer/index.tsx","pages/Room/containers/SocketContainer/index.tsx","pages/Room/containers/ToolsContainer/index.tsx","pages/Room/containers/UserListContainer/index.tsx","pages/Room/index.tsx","pages/About/components/Typo3D/index.jsx","pages/About/components/Image3D/index.tsx","pages/About/components/Clouds/index.tsx","pages/About/components/Earth/index.tsx","pages/About/components/CameraControl/index.jsx","pages/About/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["SocketMessageType","DrawingTools","DrawingStatus","GameStatus","common","createModel","state","isLoading","selectors","slice","reducers","showLoading","hideLoading","room","isConnectedSocket","isJoined","userInfo","participants","setSocketState","payload","setJoinedState","setUserInfo","updateParticipants","updateUserPoint","userId","roundPoint","map","user","point","roomId","senderId","getRandomNumber","max","Math","floor","random","isStorybook","process","STORYBOOK","socket","homepage","io","transports","sendMessage","type","body","to","data","send","initialState","status","WAITING","painterId","questions","round","time","game","isVisibleOverlayContent","STANDBY_TURN","COMPLETED","GAMEOVER","currentQuestion","setQuestions","setPainterId","setRound","setTime","setStatus","effects","dispatch","init","rootState","standBy","wait","workerTimers","play","PLAYING","complete","nextQuestion","finish","_","nextRound","nextPainterIndex","nextPainterId","length","gamePoint","resetCorrectUserInfo","checkUserAnswer","text","correctUserList","isCorrect","isExistCorrectUser","find","correctUser","CORRECT_USER","RANK_POINT_BASE","addCorrectUserInfo","push","ranking","chat","chatList","addChat","ROOM_LIST","name","COLORS","PROFILE_CHARACTERS","QUESTIONS","LOCAL_STORAGE","setStorage","key","value","JSON","stringify","localStorage","getStorage","console","info","parse","error","drawing","tool","color","size","currentTool","PEN","currentColor","currentSize","models","tools","setTool","setColor","setSize","store","plugins","immerPlugin","selectPlugin","select","PATHS","HOME","ROOM","ABOUT","Home","useState","selectedIndex","setSelectedIndex","navigate","useNavigate","className","as","mb","variant","colorScheme","index","selected","onClick","handleItemClick","spacing","rightIcon","PageTemplate","children","id","event","EventEmitter","useGameHandler","useSelector","useGameStatus","isWaiting","isPlaying","useDispatch","userCount","isAllUserCorrect","useEffect","clearAll","removeAllListeners","on","isStandByTurn","isComplete","isGameOver","useGameSync","isMyTurn","useMyTurn","log","SYNC_GAME_STATUS","usePainterInfo","DEFAULT_MODE","LINE_CAP","DrawingCore","canvas","context","config","startPoint","x","y","currentPoint","this","mode","e","offsetX","offsetY","beginPath","globalCompositeOperation","strokeStyle","lineWidth","ERASER","lineJoin","lineCap","moveTo","lineTo","stroke","closePath","width","height","clearRect","newConf","scrollWidth","scrollHeight","scaleX","scaleY","Drawing","params","enabled","isDragging","drawCommandQueue","currentDrawCommand","redoDrawingStack","canvasSize","mouseDownHandler","mouseMoveHandler","mouseUpHandler","keyDownHandler","onMouseDown","bind","onMouseMove","onMouseUp","onKeyDown","bindSocketEventHandler","getCanvasSize","getPoint","start","getConfig","DRAWING","drawingStatus","START","drawingMode","startPoinByScale","currentPointByScale","drawingCommand","draw","DRAW","pop","undo","restoreDraw","REDO","redo","clear","forEach","drawingParams","end","END","metaKey","preventDefault","shiftKey","CLEAR_ALL","bindMouseEventHandler","bindKeyboardEventHandler","unbindMouseEventHandler","unbindKeyboardEventHandler","addEventListener","window","removeEventListener","setConfig","UNDO","CanvasContainer","canvasRef","useRef","isPainterMode","current","getContext","clientWidth","clientHeight","enable","disable","isEraserTool","cn","pen","eraser","ref","ChatContainer","chatListRef","textRef","hasScrollChat","setHasScrollChat","isHideScrollbar","setIsHideScrollbar","handleScrollToBottom","useCallback","$chatList","scrollTop","handleScrollChat","isScrollUp","ceil","handleSendMessage","message","timestamp","Date","getTime","CHAT","nickName","isMine","trim","setTimeout","handleKeyUp","handleKeyDown","findParticipantInfo","onChat","h","templateRows","borderRadius","overflow","rowSpan","onScroll","i","mine","boxShadow","icon","alignItems","p","fontSize","bg","pr","placeholder","onKeyUp","mr","justifyContent","GameQuestion","word","isBlind","minWidth","textAlign","fontWeight","Array","from","fill","GameRound","totalRound","GameTimer","timeCount","isNeedSpeedUp","isTimeout","useSound","tickTock","playbackRate","interrupt","stop","forceSoundEnabled","PaletteColor","isWhiteColor","backgroundColor","w","PaletteSlider","onSliderChange","defaultValue","min","onChange","val","ProfileAvatar","style","variants","initial","opacity","scale","visible","ResultLayer","title","motion","div","animate","transition","duration","bgColor","minHeight","padding","marginX","NextTurnContent","painterName","PainterText","lineHeight","m","textDecoration","GamerText","CompleteContent","userList","profileIndex","currectUserInfo","GameOverContent","confetti","particleCount","spread","zIndex","isFirstUser","isSecondUser","isThirdUser","winner","GameContentContainer","isCurrectUser","GameStatusContainer","painterInfo","useMotion","deps","controls","useAnimation","delay","stiffness","velocity","default","GateContainer","randomIndex","setProfileIndex","inputRef","isPrevDisabled","useMemo","isNextDisabled","defaultNickName","getRandomProfile","handlePrevProfile","handleNextProfile","handleEnterRoom","uuidv4","emit","alert","alignContent","maxLength","required","templateColumns","gap","disabled","colSpan","mt","HeaderContainer","handleExit","location","href","align","SocketContainer","onGateIn","onJoinUser","onLeaveUser","onMessage","bindSocket","setupBaseInfo","ToolsContainer","handleDrawingTool","handleColor","handleSlider","direction","Object","keys","isActive","UserListContainer","isPainter","painter","margin","ml","startColor","Room","useParams","createBreakpoints","sm","md","lg","xl","maxW","base","gridAutoFlow","extend","TextGeometry","Typo3D","vAlign","hAlign","props","font","useLoader","FontLoader","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","mesh","geometry","center","attach","args","shininess","Image3D","position","materialImgs","useTexture","useFrame","rotation","material","attachArray","Clouds","radius","earthClouds","cloudsRef","clock","elapsedTime","transparent","alphaMap","Earth","earthSpecular","specularMap","specular","Color","Stars","depth","count","factor","saturation","fade","VEC","THREE","CameraControl","isAction","setIsAction","camera","lerp","set","timer","clearTimeout","About","fov","fallback","TrackballControls","panSpeed","minDistance","maxDistance","target","rel","AppRoutes","path","element","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4a76d7e.chunk.js","sourcesContent":["export enum SocketMessageType {\n  CHAT = 'CHAT',\n  DRAWING = 'DRAWING',\n  CORRECT_USER = 'CORRECT_USER',\n  SYNC_GAME_STATUS = 'SYNC_GAME_STATUS',\n}\n\nexport enum DrawingTools {\n  PEN = 'PEN',\n  ERASER = 'ERASER',\n  CLEAR_ALL = 'CLEAR_ALL',\n}\n\nexport enum DrawingStatus {\n  START = 'START',\n  DRAW = 'DRAW',\n  END = 'END',\n  CLEAR_ALL = 'CLEAR_ALL',\n  UNDO = 'UNDO',\n  REDO = 'REDO',\n}\n\nexport enum GameStatus {\n  WAITING = 'WAITING', // 참여자 대기\n  STANDBY_TURN = 'STANDBY_TURN', // 문제 준비 상태\n  PLAYING = 'PLAYING', // 게임 진행중\n  COMPLETED = 'COMPLETED', // 한 단어 완료\n  GAMEOVER = 'GAMEOVER', // 게임 종료\n}\n","import { createModel } from '@rematch/core';\nimport { RootModel } from './';\n\nexport interface CommonState {\n  isLoading: boolean;\n}\n\nexport const initialState: CommonState = {\n  isLoading: false,\n};\n\nexport const common = createModel<RootModel>()({\n  state: initialState,\n  selectors: (slice) => ({\n    state: () => slice,\n  }),\n  reducers: {\n    showLoading(state) {\n      state.isLoading = true;\n    },\n    hideLoading(state) {\n      state.isLoading = false;\n    },\n  },\n});\n","import { createModel } from '@rematch/core';\nimport { RootModel } from './';\n\nexport interface RoomState {\n  isConnectedSocket: boolean;\n  isJoined: boolean;\n  userInfo: Picasso.UserInfo | null;\n  participants: Picasso.UserInfo[];\n}\n\nexport const initialState: RoomState = {\n  isConnectedSocket: false,\n  isJoined: false,\n  userInfo: null,\n  participants: [],\n};\n\nexport const room = createModel<RootModel>()({\n  state: initialState,\n  selectors: (slice) => ({\n    state: () => slice,\n  }),\n  reducers: {\n    setSocketState(state, payload: boolean) {\n      state.isConnectedSocket = payload;\n      return state;\n    },\n    setJoinedState(state, payload: boolean) {\n      state.isJoined = payload;\n      return state;\n    },\n    setUserInfo(state, payload: Picasso.UserInfo) {\n      state.userInfo = payload;\n      return state;\n    },\n    updateParticipants(state, payload: Picasso.UserInfo[]) {\n      state.participants = payload;\n      return state;\n    },\n    updateUserPoint(state, { userId, roundPoint }: { userId: string; roundPoint: number }) {\n      const participants = state.participants.map((user) => {\n        if (user.userId === userId) {\n          user.point = user.point ?? 0 + roundPoint;\n        }\n        return user;\n      });\n\n      state.participants = participants;\n      return state;\n    },\n  },\n});\n","import io from 'socket.io-client';\nimport { isNodeProdcution } from 'helpers/env';\n\nconst SOCKET_SERVER = isNodeProdcution ? 'wss://maybe-picasso.herokuapp.com' : 'ws://localhost:3000';\n\nlet roomId: string;\nlet senderId: string;\n\nexport const socket = io(SOCKET_SERVER, {\n  transports: ['websocket'],\n});\n\ninterface SocketInitData {\n  roomId: string;\n  userId: string;\n}\n\nexport const setupBaseInfo = ({ roomId: id, userId }: SocketInitData) => {\n  roomId = id;\n  senderId = userId;\n};\n\nexport const sendMessage = ({ type, body, to = 'all' }: Pick<Picasso.SocketMessage, 'type' | 'body' | 'to'>) => {\n  const data: Picasso.SocketMessage = {\n    roomId,\n    senderId,\n    to,\n    type,\n    body,\n  };\n\n  socket.send(data);\n};\n\nexport default socket;\n","import { v4 as uuidv4 } from 'uuid';\nimport { throttle } from 'lodash-es';\nimport randomWord from 'random-words';\n\nconst REPEAT_HOLD_TIME = 1000;\nconst THROTTLE_OPTIONS = {\n  trailing: false, // throttle 후행 이벤트 발동 설정\n};\n\n/**\n * UUID를 반환합니다.\n */\nexport const getUuid = (): string => {\n  return uuidv4();\n};\n\n/**\n * 룸ID에 사용할 랜덤한 단어를 반환합니다.\n */\nexport const getRandomRoomId = (count: number = 1): string => {\n  return randomWord(count).join('-');\n};\n\n/**\n * 최대값내에 랜덤값을 반환합니다.\n */\nexport const getRandomNumber = (max: number): number => {\n  return Math.floor(Math.random() * max);\n};\n\n/**\n * 이벤트 쓰로틀이 적용된 함수를 반환합니다.\n */\nexport const getThrottledFunc = (func: any) => {\n  return throttle(func, REPEAT_HOLD_TIME, THROTTLE_OPTIONS);\n};\n\n/**\n * 두 값이 같은지 비교합니다.\n */\nexport const compare = (a: any, b: any) => {\n  return a === b;\n};\n","import { homepage } from '../../package.json';\n\nexport const isNodeProdcution: boolean = process.env.NODE_ENV === 'production';\nexport const isStorybook: boolean = process.env.STORYBOOK === 'true';\nexport const basename = isNodeProdcution ? homepage : '';\n","import * as workerTimers from 'worker-timers';\nimport { createModel } from '@rematch/core';\nimport { RootModel } from './';\nimport { GameStatus } from 'types/enums';\nimport { compare } from 'helpers/utils';\nimport { sendMessage } from 'core/socket';\nimport { SocketMessageType } from 'types/enums';\n\nexport interface GameState {\n  status: GameStatus;\n  painterId: string | null;\n  questions: string[];\n  round: number;\n  time: number;\n}\n\nexport const initialState: GameState = {\n  status: GameStatus.WAITING,\n  painterId: null,\n  questions: [],\n  round: 1,\n  time: 60,\n};\n\nconst NEXT_ACTION_DELAY = 5000;\n\n// TODO: 점수처리 방법 고민\n// 3위까지는 남은 시간의 2배, 1.5배, 1.2배 4위 부터 1.0\n// 참여자수 가산점?\n\nexport const game = createModel<RootModel>()({\n  state: initialState,\n  selectors: (slice) => ({\n    state: () => slice,\n    isVisibleOverlayContent: () =>\n      slice(\n        ({ status }) =>\n          status === GameStatus.STANDBY_TURN || status === GameStatus.COMPLETED || status === GameStatus.GAMEOVER\n      ),\n    currentQuestion: () => slice(({ questions, round }) => questions[round - 1]),\n  }),\n  reducers: {\n    setQuestions(state, payload: string[]) {\n      state.questions = payload;\n      return state;\n    },\n    setPainterId(state, payload: string) {\n      state.painterId = payload;\n      return state;\n    },\n    setRound(state, payload: number) {\n      state.round = payload;\n      return state;\n    },\n    setTime(state, payload: number) {\n      state.time = payload;\n      return state;\n    },\n    setStatus(state, payload: GameStatus) {\n      state.status = payload;\n      return state;\n    },\n  },\n  effects: (dispatch) => ({\n    init({ questions }: Pick<GameState, 'questions'>, rootState) {\n      const { room } = rootState;\n      const { participants } = room;\n      dispatch.game.standBy();\n      dispatch.game.setQuestions(questions);\n      dispatch.game.setRound(initialState.round);\n      dispatch.game.setTime(initialState.time);\n      dispatch.game.setPainterId(participants[0].userId);\n    },\n    wait() {\n      dispatch.game.setStatus(GameStatus.WAITING);\n    },\n    standBy() {\n      dispatch.game.setStatus(GameStatus.STANDBY_TURN);\n\n      // 문제 안내 후 5초뒤 게임 시작\n      workerTimers.setTimeout(() => {\n        dispatch.game.play();\n      }, NEXT_ACTION_DELAY);\n    },\n    play() {\n      dispatch.game.setStatus(GameStatus.PLAYING);\n    },\n    complete() {\n      dispatch.game.setStatus(GameStatus.COMPLETED);\n\n      // 라운드 완료 후 5초뒤 다음 문제 안내\n      workerTimers.setTimeout(() => {\n        dispatch.game.nextQuestion({});\n      }, NEXT_ACTION_DELAY);\n    },\n    finish() {\n      dispatch.game.setStatus(GameStatus.GAMEOVER);\n    },\n    nextQuestion(_, rootState) {\n      const { game, room } = rootState;\n      const { participants } = room;\n      const nextRound = game.round + 1;\n      const nextPainterIndex = nextRound - 1;\n      const nextPainterId =\n        participants[nextPainterIndex]?.userId ??\n        participants[(nextPainterIndex - participants.length) % participants.length].userId; // 사용자 수보다 라운드가 커질때 순차 탐색 연산 처리\n\n      if (nextRound > game.questions.length) {\n        dispatch.game.finish();\n        return;\n      }\n\n      dispatch.game.standBy();\n      dispatch.game.setRound(nextRound);\n      dispatch.game.setTime(initialState.time);\n      dispatch.game.setPainterId(nextPainterId);\n      dispatch.gamePoint.resetCorrectUserInfo();\n    },\n    checkUserAnswer({ userId, text }: { userId: string; text: string }, rootState) {\n      const { game, gamePoint } = rootState;\n      const { questions, round, time, painterId } = game;\n      const { correctUserList } = gamePoint;\n      const currentQuestion = questions[round - 1];\n      const isCorrect = compare(currentQuestion, text);\n      const isExistCorrectUser = correctUserList.find((user) => user.userId === userId);\n\n      // 페인터가 입력한 정답 무시\n      // 이미 정답을 맞힌 사용자 무시\n      if (painterId === userId || isExistCorrectUser) {\n        return;\n      }\n\n      if (isCorrect && time) {\n        dispatch.gamePoint.correctUser({ userId });\n\n        sendMessage({\n          type: SocketMessageType.CORRECT_USER,\n          body: {\n            userId,\n          },\n        });\n      }\n    },\n  }),\n});\n","import { createModel } from '@rematch/core';\nimport { RootModel } from './';\n\nexport interface GamePointState {\n  correctUserList: Picasso.CorrectUserInfo[]; // 현재 라운드의 정답자 포인트\n}\n\n// 점수 가산 방식\n// 조건1. 3위까지는 남은 시간의 2배, 1.5배, 1.2배 4위 부터 1.0\n// 조건2. 참여자수 가산점\nconst RANK_POINT_BASE: Record<number, number> = {\n  1: 2,\n  2: 1.5,\n  3: 1.2,\n  99: 1.0,\n};\n\nexport const initialState: GamePointState = {\n  correctUserList: [],\n};\n\nexport const gamePoint = createModel<RootModel>()({\n  state: initialState,\n  selectors: (slice) => ({\n    state: () => slice,\n  }),\n  reducers: {\n    addCorrectUserInfo(state, payload: Picasso.CorrectUserInfo) {\n      state.correctUserList.push(payload);\n      return state;\n    },\n    resetCorrectUserInfo(state) {\n      state.correctUserList = [];\n      return state;\n    },\n  },\n  effects: (dispatch) => ({\n    correctUser({ userId }, rootState) {\n      const { room, game, gamePoint } = rootState;\n      const { correctUserList } = gamePoint;\n      const { participants } = room;\n      const { time } = game;\n      const ranking = correctUserList.length + 1;\n      const rankingPoint = RANK_POINT_BASE[ranking < 4 ? ranking : 99];\n      const participantsPoint = participants.length * 10;\n      const point = time * rankingPoint + participantsPoint;\n\n      // 현재 라운드 포인트 정보 추가\n      dispatch.gamePoint.addCorrectUserInfo({\n        userId,\n        point,\n        time,\n      });\n\n      // 사용자의 기존 포인트 정보에 추가\n      // TODO: 서버 API로 대체 예정\n      dispatch.room.updateUserPoint({\n        userId,\n        roundPoint: point,\n      });\n    },\n  }),\n});\n","import { createModel } from '@rematch/core';\nimport { RootModel } from './';\n\ninterface ChatMessage {\n  userId: string;\n  nickName: string;\n  message: string;\n  timestamp: number;\n  isMine?: boolean;\n}\n\nexport interface ChatState {\n  chatList: ChatMessage[];\n}\n\nexport const initialState: ChatState = {\n  chatList: [],\n};\n\nexport const chat = createModel<RootModel>()({\n  state: initialState,\n  selectors: (slice) => ({\n    state: () => slice,\n  }),\n  reducers: {\n    addChat(state, payload: ChatMessage) {\n      state.chatList.push(payload);\n      return state;\n    },\n  },\n});\n","export const ROOM_LIST: Record<string, string>[] = [\n  { name: '양자리' },\n  { name: '황소자리' },\n  { name: '쌍둥이자리' },\n  { name: '게자리' },\n  { name: '사자자리' },\n  { name: '처녀자리' },\n  { name: '천칭자리' },\n  { name: '전갈자리' },\n  { name: '뱀주인자리' },\n  { name: '궁수자리' },\n  { name: '염소자리' },\n  { name: '물고기자리' },\n];\n\nexport const COLORS: string[] = [\n  '#000000', // Black\n  '#aaaaaa', // Gray\n  '#dddddd', // Silver\n  '#ffffff', // White\n  '#0074d9', // Blue\n  '#7fdbff', // Aqua\n  '#39cccc', // Teal\n  '#3d9970', // Olive\n  '#2ecc40', // Green\n  '#01ff70', // Lime\n  '#ffdc00', // Yellow\n  '#ff851b', // Orange\n  '#f00000', // Red\n  '#85144b', // Maroon\n  '#f012be', // Fuchsia\n  '#b10dc9', // Purple\\\n  '#F05E5F', // Pastal red\n  '#5A4B50', // Pastal brown\n  '#8BBEB4', // Pastal green\n  '#F0B85E', // Pastal yellow\n];\n\nexport const DEFAULT_LINE_SIZE: number = 3;\n\n// https://emojiterra.com/animals/\n// prettier-ignore\nexport const PROFILE_CHARACTERS = [\n  '🐶', '🐱', '🦁', '🐰', '🦊', '🐨', '🐼', '🐯', '🐥', '🐷',\n  '🐮', '🐹', '🐻‍❄️', '🐸', '🐲', '🐳', '🐙', '🐔', '🦄', '🐺',\n  '🦥', '🦦', '🦭', '🦖', '🐢', \n  '🦋', '🐛', '🐝', '🕷️', '🐌',\n];\n\n// prettier-ignore\nexport const QUESTIONS = [\n  \"햄버거\", \"스타벅스\", \"녹차\", \"풍선껌\", \"수영복\", \"노래방\", \"할머니\", \"감기약\", \"아이폰\", \"크리스마스\",\n]\n\nexport const LOCAL_STORAGE = {\n  NICK_NAME: 'nickName',\n  DRAWING_TOOLS: 'drawingTools',\n};\n\nexport const MEMBER_PROFILES: string[] = [\n  'https://github.com/codejs-kr.png',\n  'https://github.com/code-sign.png',\n  'https://github.com/lotstar87.png',\n];\n","/**\n * 로컬스토리지 쓰기\n * @param key\n * @param value\n */\nexport function setStorage(key: string, value: any): void {\n  value = JSON.stringify(value);\n  localStorage[key] = value;\n}\n\n/**\n * 로컬스토리지 읽기\n * @param key\n */\nexport function getStorage(key: string): any {\n  let value = localStorage[key];\n  if (!value) {\n    console.info(`localStorage에 ${key}는 없습니다.`);\n    return null;\n  }\n\n  try {\n    value = JSON.parse(value);\n  } catch (error) {\n    console.error('getStorage catch(error)', error);\n  }\n\n  return value;\n}\n\n/**\n * 로컬스토리지 특정 key 데이터 삭제\n * @param key\n */\nexport function deleteStorage(key: string): void {\n  localStorage.removeItem(key);\n}\n","import { createModel } from '@rematch/core';\nimport { RootModel } from './';\nimport { COLORS, DEFAULT_LINE_SIZE, LOCAL_STORAGE } from 'constants/index';\nimport { DrawingTools } from 'types/enums';\nimport { getStorage, setStorage } from 'helpers/storage';\n\nexport interface ToolsState {\n  currentTool: DrawingTools;\n  currentColor: string;\n  currentSize: number;\n}\n\nconst { tool, color, size } = getStorage(LOCAL_STORAGE.DRAWING_TOOLS) || {};\n\nexport const initialState: ToolsState = {\n  currentTool: tool || DrawingTools.PEN,\n  currentColor: color || COLORS[0],\n  currentSize: size || DEFAULT_LINE_SIZE,\n};\n\nexport const tools = createModel<RootModel>()({\n  state: initialState,\n  selectors: (slice) => ({\n    state: () => slice,\n  }),\n  reducers: {\n    setTool(state, payload: DrawingTools) {\n      const { currentColor, currentSize } = state;\n\n      setStorage(LOCAL_STORAGE.DRAWING_TOOLS, {\n        tool: payload,\n        color: currentColor,\n        size: currentSize,\n      });\n\n      return {\n        ...state,\n        currentTool: payload,\n      };\n    },\n    setColor(state, payload: string) {\n      const { currentTool, currentSize } = state;\n\n      setStorage(LOCAL_STORAGE.DRAWING_TOOLS, {\n        tool: currentTool,\n        color: payload,\n        size: currentSize,\n      });\n\n      return {\n        ...state,\n        currentColor: payload,\n      };\n    },\n    setSize(state, payload: number) {\n      const { currentTool, currentColor } = state;\n\n      setStorage(LOCAL_STORAGE.DRAWING_TOOLS, {\n        tool: currentTool,\n        color: currentColor,\n        size: payload,\n      });\n\n      return {\n        ...state,\n        currentSize: payload,\n      };\n    },\n  },\n});\n","import { useRef, useState, useEffect } from 'react';\nimport cn from 'classnames';\n\nimport { useSelector } from 'react-redux';\nimport { select } from 'store';\nimport { useMyTurn, useGameStatus } from '../../hooks';\nimport { Drawing } from 'core/drawing';\nimport { DrawingTools } from 'types/enums';\nimport './index.scss';\n\nexport let drawing: Drawing;\n\nconst CanvasContainer = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [size, setSize] = useState({ width: 0, height: 0 });\n  const { currentColor, currentTool, currentSize } = useSelector(select.tools.state);\n  const { isWaiting } = useGameStatus();\n  const isMyTurn = useMyTurn();\n\n  const isPainterMode = isMyTurn || isWaiting;\n\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    if (!context) {\n      console.error('컨텍스트를 가져오는데에 실패하였습니다.');\n      return;\n    }\n\n    setSize({\n      width: canvas.clientWidth,\n      height: canvas.clientHeight,\n    });\n\n    if (!drawing) {\n      drawing = new Drawing({\n        canvas,\n        context,\n      });\n    }\n\n    drawing.enable();\n  }, []);\n\n  useEffect(() => {\n    if (isPainterMode) {\n      drawing.enable();\n    } else {\n      drawing.disable();\n    }\n  }, [isPainterMode]);\n\n  useEffect(() => {\n    drawing.setConfig({\n      color: currentColor,\n    });\n  }, [currentColor, isPainterMode]);\n\n  useEffect(() => {\n    drawing.setConfig({\n      size: currentSize,\n    });\n  }, [currentSize, isPainterMode]);\n\n  useEffect(() => {\n    drawing.setConfig({\n      mode: currentTool,\n    });\n  }, [currentTool, isPainterMode]);\n\n  const isEraserTool = currentTool === DrawingTools.ERASER;\n\n  return (\n    <canvas\n      id=\"drawingCanvas\"\n      className={cn({ pen: isPainterMode, eraser: isEraserTool })}\n      ref={canvasRef}\n      width={size.width}\n      height={size.height}\n    />\n  );\n};\n\nexport default CanvasContainer;\n","import { Models } from '@rematch/core';\nimport { common } from './common';\nimport { room } from './room';\nimport { game } from './game';\nimport { gamePoint } from './gamePoint';\nimport { chat } from './chat';\nimport { tools } from './tools';\n\nexport interface RootModel extends Models<RootModel> {\n  common: typeof common;\n  room: typeof room;\n  game: typeof game;\n  gamePoint: typeof gamePoint;\n  chat: typeof chat;\n  tools: typeof tools;\n}\n\nexport const models: RootModel = { common, room, game, gamePoint, chat, tools };\n","import { init, RematchDispatch, RematchRootState } from '@rematch/core';\nimport { models, RootModel } from './models';\nimport immerPlugin from '@rematch/immer';\nimport selectPlugin from '@rematch/select';\n\nexport const store = init<RootModel>({\n  models,\n  plugins: [immerPlugin(), selectPlugin()],\n});\n\n// REF: https://rematchjs.org/docs/plugins/select/#3-selector-examples\nexport const { select } = store;\n\nexport type Store = typeof store;\nexport type Dispatch = RematchDispatch<RootModel>;\nexport type RootState = RematchRootState<RootModel>;\n","const PATHS = {\n  HOME: '/',\n  ROOM: '/room/:roomId',\n  ABOUT: '/about',\n};\n\nexport default PATHS;\n","import { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Container, Button, Heading, Stack, Divider, Badge } from '@chakra-ui/react';\nimport { BsArrowRightCircleFill } from 'react-icons/bs';\nimport { ROOM_LIST } from 'constants/index';\nimport PATHS from 'routes/paths';\nimport './index.scss';\n\nconst Home = () => {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const navigate = useNavigate();\n\n  const handleItemClick = (index: number) => {\n    setSelectedIndex(index);\n  };\n\n  const handleEnter = () => {\n    navigate(`/room/${ROOM_LIST[selectedIndex].name}`);\n  };\n\n  return (\n    <div className=\"home-wrap\">\n      <Container className=\"room-list-wrap\">\n        <Heading as=\"h1\" size=\"2xl\" mb=\"5\" color=\"#fff\">\n          Picasso 🎨\n          <Badge className=\"badge\" variant=\"solid\" colorScheme=\"purple\">\n            Alpha\n          </Badge>\n        </Heading>\n        <ul>\n          {ROOM_LIST.map(({ name }, index) => {\n            const selected = selectedIndex === index;\n            const className = `${selected ? 'active' : ''}`;\n            return (\n              <li>\n                <button type=\"button\" className={className} onClick={() => handleItemClick(index)}>\n                  <span className=\"name\">{name}</span>\n                  {selected && <span className=\"icon\">🔮</span>}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n\n        <Stack spacing={5}>\n          <Divider />\n          <Button\n            type=\"submit\"\n            colorScheme=\"teal\"\n            size=\"lg\"\n            variant=\"solid\"\n            rightIcon={<BsArrowRightCircleFill />}\n            onClick={handleEnter}\n          >\n            시작하기\n          </Button>\n        </Stack>\n      </Container>\n\n      <footer>\n        <Link to={PATHS.ABOUT}>About us</Link>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './index.scss';\n\ninterface Props {\n  children: React.ReactNode;\n  id?: string;\n}\n\nconst PageTemplate = ({ children, id }: Props) => {\n  return (\n    <div className=\"page-template\" id={id}>\n      {children}\n    </div>\n  );\n};\n\nexport default PageTemplate;\n","import EventEmitter from 'events';\n\nconst event = new EventEmitter();\n\nexport default event;\n","import * as workerTimers from 'worker-timers';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Dispatch, select } from 'store';\nimport { SocketMessageType } from 'types/enums';\nimport { QUESTIONS } from 'constants/index';\nimport { useGameStatus } from '../hooks';\nimport { drawing } from 'pages/Room/containers/CanvasContainer';\nimport event from 'core/event';\n\nconst useGameHandler = () => {\n  const { participants } = useSelector(select.room.state);\n  const { time } = useSelector(select.game.state);\n  const { correctUserList } = useSelector(select.gamePoint.state);\n  const { isWaiting, isPlaying } = useGameStatus();\n  const dispatch = useDispatch<Dispatch>();\n  const userCount = participants.length;\n  const isAllUserCorrect = correctUserList.length > 0 && correctUserList.length === participants.length - 1;\n\n  // 참여 인원별 게임 상태 핸들링\n  useEffect(() => {\n    if (userCount >= 2 && isWaiting) {\n      dispatch.game.init({ questions: QUESTIONS });\n    } else if (userCount <= 1 && !isWaiting) {\n      dispatch.game.wait();\n    }\n  }, [isWaiting, userCount, dispatch]);\n\n  // 게임 진행 시간별 핸들링\n  useEffect(() => {\n    if (!isPlaying) {\n      return;\n    }\n\n    workerTimers.setTimeout(() => {\n      if (time === 0) {\n        dispatch.game.complete();\n      } else {\n        dispatch.game.setTime(time - 1);\n      }\n    }, 1000);\n  }, [isPlaying, time, dispatch]);\n\n  // 전체 인원 조기 정답시 처리\n  useEffect(() => {\n    if (!isAllUserCorrect) {\n      return;\n    }\n\n    dispatch.game.complete();\n  }, [isAllUserCorrect, dispatch]);\n\n  // 게임 시작시 그리기 클리어\n  useEffect(() => {\n    if (isPlaying && drawing) {\n      drawing.clearAll();\n    }\n  }, [isPlaying]);\n\n  // 정답자 소켓 메시지 핸들링\n  useEffect(() => {\n    event.removeAllListeners(SocketMessageType.CORRECT_USER);\n    event.on(SocketMessageType.CORRECT_USER, ({ body }) => {\n      const { userId } = body;\n      dispatch.gamePoint.correctUser({ userId });\n    });\n  }, [dispatch]);\n};\n\nexport default useGameHandler;\n","import { useSelector } from 'react-redux';\nimport { select } from 'store';\nimport { GameStatus } from 'types/enums';\n\nconst useGameStatus = () => {\n  const { status } = useSelector(select.game.state);\n\n  return {\n    isWaiting: status === GameStatus.WAITING,\n    isStandByTurn: status === GameStatus.STANDBY_TURN,\n    isPlaying: status === GameStatus.PLAYING,\n    isComplete: status === GameStatus.COMPLETED,\n    isGameOver: status === GameStatus.GAMEOVER,\n  };\n};\n\nexport default useGameStatus;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Dispatch, select } from 'store';\nimport { SocketMessageType } from 'types/enums';\nimport { useGameStatus, useMyTurn } from '../hooks';\nimport { sendMessage } from 'core/socket';\nimport event from 'core/event';\n\nconst useGameSync = () => {\n  const { time, painterId, status, round } = useSelector(select.game.state);\n  const { isWaiting } = useGameStatus();\n  const dispatch = useDispatch<Dispatch>();\n  const isMyTurn = useMyTurn();\n\n  // 진행중 입장한 유저 게임 진행 상태 싱크\n  useEffect(() => {\n    event.removeAllListeners('join');\n    event.on('join', (data) => {\n      console.log('[디버깅] join :>> ', data);\n      if (!isWaiting && isMyTurn) {\n        sendMessage({\n          type: SocketMessageType.SYNC_GAME_STATUS,\n          to: data.userInfo.userId,\n          body: {\n            painterId,\n            status,\n            round,\n            time,\n          },\n        });\n      }\n    });\n  }, [isWaiting, isMyTurn, painterId, round, time, status]);\n\n  useEffect(() => {\n    event.removeAllListeners(SocketMessageType.SYNC_GAME_STATUS);\n    event.on(SocketMessageType.SYNC_GAME_STATUS, ({ body }) => {\n      console.log('[디버깅] SYNC_GAME_STATUS :>> ', body);\n      const { status, painterId, round, time } = body;\n\n      dispatch.game.setPainterId(painterId);\n      dispatch.game.setTime(time);\n      dispatch.game.setRound(round);\n      dispatch.game.setStatus(status);\n    });\n  }, [dispatch]);\n};\n\nexport default useGameSync;\n","import { useSelector } from 'react-redux';\nimport { select } from 'store';\n\nconst useMyTurn = () => {\n  const { userInfo } = useSelector(select.room.state);\n  const { painterId } = useSelector(select.game.state);\n\n  return userInfo?.userId === painterId;\n};\n\nexport default useMyTurn;\n","import { useSelector } from 'react-redux';\nimport { select } from 'store';\n\nconst usePainterInfo = () => {\n  const { participants } = useSelector(select.room.state);\n  const { painterId } = useSelector(select.game.state);\n\n  return participants.find(({ userId }) => userId === painterId);\n};\n\nexport default usePainterInfo;\n","import { DrawingTools } from 'types/enums';\n\nconst DEFAULT_MODE = DrawingTools.PEN;\nconst DEFAULT_COLOR = 'black';\nconst DEFAULT_SIZE = 3;\nconst LINE_CAP = 'round';\n\ntype Cursor = {\n  x: number;\n  y: number;\n};\n\ninterface Config {\n  mode: string;\n  color: string;\n  size: number;\n}\n\nexport interface DrawingConstructorParams {\n  canvas: HTMLCanvasElement;\n  context: CanvasRenderingContext2D;\n  config?: Config;\n}\n\nexport interface DrawParams {\n  context: CanvasRenderingContext2D;\n  config: Config;\n  startPoint: Cursor;\n  currentPoint: Cursor;\n}\n\nexport class DrawingCore {\n  public context: CanvasRenderingContext2D;\n  public canvas: HTMLCanvasElement;\n  public config: Config;\n  public startPoint: Cursor = { x: 0, y: 0 };\n  public currentPoint: Cursor = { x: 0, y: 0 };\n  public getPoint(e: MouseEvent) {\n    return {\n      x: e.offsetX,\n      y: e.offsetY,\n    };\n  }\n\n  constructor({ canvas, context, config }: DrawingConstructorParams) {\n    this.canvas = canvas;\n    this.context = context;\n    this.config = config ?? {\n      size: DEFAULT_SIZE,\n      color: DEFAULT_COLOR,\n      mode: DEFAULT_MODE,\n    };\n  }\n\n  start() {\n    if (!this.context) {\n      console.error('컨텍스트를 찾을 수 없습니다.');\n      return;\n    }\n\n    this.context.beginPath();\n  }\n\n  draw({ context, config, startPoint, currentPoint }: DrawParams) {\n    const { mode, size, color } = config;\n\n    if (mode === DrawingTools.PEN) {\n      context.globalCompositeOperation = 'source-over'; // 기본 설정으로 새로운 도형을 위에 그린다.\n      context.strokeStyle = color;\n      context.lineWidth = size;\n    } else if (mode === DrawingTools.ERASER) {\n      context.globalCompositeOperation = 'destination-out'; // 새롭게 그려지는 도형이 이전 그림과 겹치는 부분을 투명하게 바꾼다.\n      context.lineWidth = size * 4;\n    }\n\n    context.lineJoin = LINE_CAP;\n    context.lineCap = LINE_CAP;\n    context.moveTo(startPoint.x, startPoint.y); // 시작점\n    context.lineTo(currentPoint.x, currentPoint.y); // 현재점\n    context.stroke();\n  }\n\n  end() {\n    if (!this.context) {\n      console.error('컨텍스트를 찾을 수 없습니다.');\n      return;\n    }\n\n    this.context.closePath();\n  }\n\n  clear() {\n    const { width, height } = this.context.canvas;\n    this.context.clearRect(0, 0, width, height);\n  }\n\n  setConfig(config: Partial<Config>) {\n    const newConf = {\n      ...this.config,\n      ...config,\n    };\n\n    this.config = newConf;\n  }\n\n  getConfig() {\n    return this.config;\n  }\n\n  getCanvasSize(): Picasso.CanvasSizeType {\n    const { width, height, scrollWidth, scrollHeight } = this.canvas;\n\n    return {\n      width,\n      height,\n      scrollWidth,\n      scrollHeight,\n      scaleX: width / scrollWidth,\n      scaleY: height / scrollHeight,\n    };\n  }\n}\n","import { DrawingCore, DrawingConstructorParams, DrawParams } from './drawing-core';\nimport { sendMessage } from 'core/socket';\nimport { DrawingStatus, SocketMessageType } from 'types/enums';\nimport event from 'core/event';\n\ntype MouseEventHandler = (e: MouseEvent) => void;\ntype KeyboardEventHandler = (e: KeyboardEvent) => void;\n\nexport class Drawing extends DrawingCore {\n  private enabled = false;\n  private isDragging = false;\n  private drawCommandQueue: DrawParams[][] = [];\n  private currentDrawCommand: DrawParams[] = [];\n  private redoDrawingStack: DrawParams[][] = [];\n  private canvasSize: Picasso.CanvasSizeType | null = null;\n  private scaleX: number = 1;\n  private scaleY: number = 1;\n  private mouseDownHandler: MouseEventHandler | null = null;\n  private mouseMoveHandler: MouseEventHandler | null = null;\n  private mouseUpHandler: MouseEventHandler | null = null;\n  private keyDownHandler: KeyboardEventHandler | null = null;\n\n  constructor(params: DrawingConstructorParams) {\n    super(params);\n    this.init();\n  }\n\n  init() {\n    this.mouseDownHandler = this.onMouseDown.bind(this);\n    this.mouseMoveHandler = this.onMouseMove.bind(this);\n    this.mouseUpHandler = this.onMouseUp.bind(this);\n    this.keyDownHandler = this.onKeyDown.bind(this);\n    this.bindSocketEventHandler();\n  }\n\n  onMouseDown(e: MouseEvent) {\n    console.log('onMouseDown :>> ', e);\n    this.isDragging = true;\n    this.canvasSize = this.getCanvasSize();\n    this.startPoint = this.getPoint(e);\n    this.start();\n    this.currentDrawCommand = [];\n    this.redoDrawingStack = [];\n\n    const { size, color, mode } = this.getConfig();\n\n    sendMessage({\n      type: SocketMessageType.DRAWING,\n      body: {\n        drawingStatus: DrawingStatus.START,\n        drawingMode: mode,\n        lineWidth: size,\n        color,\n        canvasSize: this.canvasSize,\n        point: this.startPoint,\n      },\n    });\n  }\n\n  onMouseMove(e: MouseEvent) {\n    if (!this.isDragging) {\n      return;\n    }\n\n    this.currentPoint = this.getPoint(e);\n\n    // 캔버스 사이즈 변화에 대한 좌표 처리\n    const { scaleX, scaleY } = this.canvasSize!;\n    const startPoinByScale = {\n      x: this.startPoint.x * scaleX,\n      y: this.startPoint.y * scaleY,\n    };\n    const currentPointByScale = {\n      x: this.currentPoint.x * scaleX,\n      y: this.currentPoint.y * scaleY,\n    };\n    const drawingCommand = {\n      context: this.context,\n      config: this.config,\n      startPoint: startPoinByScale,\n      currentPoint: currentPointByScale,\n    };\n\n    this.draw(drawingCommand);\n    this.startPoint = this.currentPoint;\n    this.currentDrawCommand.push(drawingCommand);\n\n    sendMessage({\n      type: SocketMessageType.DRAWING,\n      body: {\n        drawingStatus: DrawingStatus.DRAW,\n        point: this.currentPoint,\n      },\n    });\n  }\n\n  undo() {\n    const drawing = this.drawCommandQueue.pop();\n\n    // []가 들어있는 경우가 있어서, 유효한 커맨드가 존재할때까지 반복\n    if (drawing?.length === 0 && this.drawCommandQueue.length > 0) {\n      this.undo();\n    } else if (drawing) {\n      this.redoDrawingStack.push(drawing);\n    }\n\n    this.restoreDraw();\n\n    sendMessage({\n      type: SocketMessageType.DRAWING,\n      body: {\n        drawingStatus: DrawingStatus.REDO,\n      },\n    });\n  }\n\n  redo() {\n    const drawing = this.redoDrawingStack.pop();\n\n    // []가 들어있는 경우가 있어서, 유효한 커맨드가 존재할때까지 반복\n    if (drawing?.length === 0 && this.redoDrawingStack.length > 0) {\n      this.redo();\n    } else if (drawing) {\n      this.drawCommandQueue.push(drawing);\n    }\n\n    this.restoreDraw();\n\n    sendMessage({\n      type: SocketMessageType.DRAWING,\n      body: {\n        drawingStatus: DrawingStatus.REDO,\n      },\n    });\n  }\n\n  restoreDraw() {\n    this.clear();\n    this.drawCommandQueue.forEach((drawing) => {\n      this.context.beginPath();\n      drawing.forEach((drawingParams) => {\n        this.draw(drawingParams);\n      });\n      this.context.closePath();\n    });\n  }\n\n  onMouseUp(e: MouseEvent) {\n    console.log('onMouseUp :>> ', e);\n    this.isDragging = false;\n    this.end();\n    this.drawCommandQueue.push(this.currentDrawCommand);\n    this.currentDrawCommand = [];\n\n    sendMessage({\n      type: SocketMessageType.DRAWING,\n      body: {\n        drawingStatus: DrawingStatus.END,\n      },\n    });\n  }\n\n  onKeyDown(e: KeyboardEvent) {\n    if (e.key === 'z') {\n      if (e.metaKey) {\n        e.preventDefault();\n        if (e.shiftKey) {\n          this.redo();\n        } else {\n          this.undo();\n        }\n      }\n    }\n  }\n\n  clearAll() {\n    this.clear();\n    sendMessage({\n      type: SocketMessageType.DRAWING,\n      body: {\n        drawingStatus: DrawingStatus.CLEAR_ALL,\n      },\n    });\n  }\n\n  enable() {\n    if (this.enabled) {\n      return;\n    }\n\n    this.enabled = true;\n    this.bindMouseEventHandler();\n    this.bindKeyboardEventHandler();\n  }\n\n  disable() {\n    if (!this.enabled) {\n      return;\n    }\n\n    this.enabled = false;\n    this.unbindMouseEventHandler();\n    this.unbindKeyboardEventHandler();\n  }\n\n  dispose() {\n    this.unbindMouseEventHandler();\n    this.unbindKeyboardEventHandler();\n    this.mouseDownHandler = null;\n    this.mouseMoveHandler = null;\n    this.mouseUpHandler = null;\n    this.keyDownHandler = null;\n  }\n\n  bindMouseEventHandler() {\n    if (!(this.mouseDownHandler && this.mouseMoveHandler && this.mouseUpHandler)) {\n      return;\n    }\n\n    this.canvas.addEventListener('mousedown', this.mouseDownHandler);\n    this.canvas.addEventListener('mousemove', this.mouseMoveHandler);\n    this.canvas.addEventListener('mouseup', this.mouseUpHandler);\n  }\n\n  bindKeyboardEventHandler() {\n    if (!this.keyDownHandler) {\n      return;\n    }\n\n    window.addEventListener('keydown', this.keyDownHandler);\n  }\n\n  unbindMouseEventHandler() {\n    if (!(this.mouseDownHandler && this.mouseMoveHandler && this.mouseUpHandler)) {\n      return;\n    }\n\n    this.canvas.removeEventListener('mousedown', this.mouseDownHandler);\n    this.canvas.removeEventListener('mousemove', this.mouseMoveHandler);\n    this.canvas.removeEventListener('mouseup', this.mouseUpHandler);\n  }\n\n  unbindKeyboardEventHandler() {\n    if (!this.keyDownHandler) {\n      return;\n    }\n\n    window.removeEventListener('keydown', this.keyDownHandler);\n  }\n\n  bindSocketEventHandler() {\n    event.on(SocketMessageType.DRAWING, ({ body }: Picasso.DrawingMessage) => {\n      const { drawingStatus, drawingMode, lineWidth, color, point, canvasSize } = body;\n\n      // 출제자와 캔버스 사이즈 차이로 인한 좌표 보정 처리\n      if (canvasSize) {\n        this.canvasSize = this.getCanvasSize();\n        this.scaleX = this.canvasSize.width / canvasSize.scrollWidth;\n        this.scaleY = this.canvasSize.height / canvasSize.scrollHeight;\n      }\n\n      switch (drawingStatus) {\n        case DrawingStatus.START:\n          this.setConfig({\n            mode: drawingMode,\n            size: lineWidth,\n            color,\n          });\n          this.startPoint = {\n            x: point.x * this.scaleX,\n            y: point.y * this.scaleY,\n          };\n          this.start();\n          break;\n        case DrawingStatus.DRAW:\n          this.currentPoint = {\n            x: point.x * this.scaleX,\n            y: point.y * this.scaleY,\n          };\n          this.draw({\n            context: this.context,\n            config: this.config,\n            startPoint: this.startPoint,\n            currentPoint: this.currentPoint,\n          });\n          this.startPoint = this.currentPoint;\n          break;\n        case DrawingStatus.END:\n          this.end();\n          break;\n        case DrawingStatus.CLEAR_ALL:\n          this.clear();\n          break;\n        case DrawingStatus.UNDO:\n          this.undo();\n          break;\n        case DrawingStatus.REDO:\n          this.redo();\n          break;\n      }\n    });\n  }\n}\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Dispatch, select } from 'store';\n\nimport { Flex, Grid, GridItem, IconButton, InputGroup, Input, InputRightElement } from '@chakra-ui/react';\nimport { ArrowUpIcon, ArrowDownIcon } from '@chakra-ui/icons';\n\nimport { sendMessage } from 'core/socket';\nimport { SocketMessageType } from 'types/enums';\nimport event from 'core/event';\nimport cn from 'classnames';\nimport './index.scss';\n\nconst ChatContainer = () => {\n  const { userInfo, participants } = useSelector(select.room.state);\n  const { chatList } = useSelector(select.chat.state);\n  const dispatch = useDispatch<Dispatch>();\n  const chatListRef = useRef<HTMLUListElement>(null);\n  const textRef = useRef<HTMLInputElement>(null);\n  const [hasScrollChat, setHasScrollChat] = useState(false);\n  const [isHideScrollbar, setIsHideScrollbar] = useState(false);\n\n  const handleScrollToBottom = useCallback(() => {\n    const $chatList = chatListRef.current;\n    if (!$chatList) {\n      return;\n    }\n\n    $chatList.scrollTop = $chatList.scrollHeight;\n  }, [chatListRef]);\n\n  const handleScrollChat = () => {\n    if (!chatListRef.current) return;\n    const { scrollHeight, scrollTop, clientHeight } = chatListRef.current;\n    const isScrollUp = scrollHeight !== Math.ceil(scrollTop + clientHeight);\n    setHasScrollChat(isScrollUp)\n  }\n\n  const handleSendMessage = useCallback(() => {\n    const message = textRef.current?.value;\n    const timestamp = new Date().getTime();\n\n    if (!textRef.current || !message || !userInfo) {\n      return;\n    }\n\n    const body = {\n      message,\n      timestamp,\n    };\n\n    sendMessage({\n      type: SocketMessageType.CHAT,\n      body,\n    });\n\n    const { userId, nickName } = userInfo;\n    dispatch.chat.addChat({\n      ...body,\n      isMine: true,\n      userId,\n      nickName,\n    });\n    dispatch.game.checkUserAnswer({\n      userId,\n      text: message.trim(),\n    });\n\n    textRef.current.value = '';\n    setIsHideScrollbar(true)\n    setTimeout(() => {\n      handleScrollToBottom()\n      setIsHideScrollbar(false)\n    }, 0);\n  }, [dispatch, userInfo, handleScrollToBottom]);\n\n  const handleKeyUp = useCallback(\n    (e) => {\n      if (e.shiftKey) {\n        return;\n      }\n\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        handleSendMessage();\n      }\n    },\n    [handleSendMessage]\n  );\n\n  // NOTE: 한글 마지막 글자 두번 처리되는이슈로 keydown에서도 이벤트 핸들링 필요\n  const handleKeyDown = useCallback((e) => {\n    if (e.shiftKey) {\n      return;\n    }\n\n    if (e.key === 'Enter') {\n      e.preventDefault();\n    }\n  }, []);\n\n  const findParticipantInfo = useCallback(\n    (userId: string) => {\n      return participants.find((data) => data.userId === userId);\n    },\n    [participants]\n  );\n\n  const onChat = useCallback(\n    ({ senderId, body }) => {\n      const { timestamp, message } = body;\n      const nickName = findParticipantInfo(senderId)?.nickName ?? null;\n\n      if (nickName) {\n        dispatch.chat.addChat({\n          userId: senderId,\n          nickName,\n          timestamp,\n          message,\n        });\n\n        setTimeout(() => handleScrollToBottom(), 0);\n      }\n    },\n    [dispatch, findParticipantInfo, handleScrollToBottom]\n  );\n\n  useEffect(() => {\n    window.addEventListener('resize', handleScrollChat);\n    return () => window.removeEventListener('resize', handleScrollChat);\n  }, [])\n\n  useEffect(() => {\n    event.removeAllListeners(SocketMessageType.CHAT);\n    event.on(SocketMessageType.CHAT, onChat);\n  }, [onChat]);\n\n  return (\n    <Grid h=\"100%\" templateRows=\"repeat(10, 1fr)\" borderRadius={6} overflow={'hidden'}>\n      <GridItem rowSpan={9} className=\"chat-list-wrap\" >\n        <ul ref={chatListRef} onScroll={handleScrollChat} className={cn({ \"hide-scrollbar\": isHideScrollbar })}>\n          {chatList.map(({ isMine, nickName, message }, i) => (\n            <li className={cn({ mine: isMine })} key={i}>\n              <p className=\"nickname\">{nickName}</p>\n              <p className=\"body\">{message}</p>\n            </li>\n          ))}\n        </ul>\n        {hasScrollChat &&\n          <IconButton\n            aria-label=\"최신 대화보기\"\n            size=\"md\"\n            borderRadius={100}\n            colorScheme='teal'\n            boxShadow='xl'\n            icon={<ArrowDownIcon />}\n            onClick={handleScrollToBottom}\n          />\n        }\n      </GridItem>\n      <GridItem rowSpan={1}>\n        <Flex h=\"100%\" alignItems=\"center\" p=\"10px\">\n          <InputGroup size=\"lg\">\n            <Input\n              fontSize=\"16px\"\n              bg=\"#fff\"\n              pr=\"4.5rem\"\n              type=\"text\"\n              placeholder=\"메시지를 입력해주세요!\"\n              ref={textRef}\n              onKeyDown={handleKeyDown}\n              onKeyUp={handleKeyUp}\n            />\n            <InputRightElement width=\"4rem\" mr=\"4px\" justifyContent=\"flex-end\">\n              <IconButton\n                aria-label=\"전송\"\n                size=\"md\"\n                bg=\"gray.300\"\n                icon={<ArrowUpIcon />}\n                onClick={handleSendMessage}\n              />\n            </InputRightElement>\n          </InputGroup>\n        </Flex>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default ChatContainer;\n","import { Box } from '@chakra-ui/react';\n\ninterface Props {\n  word: string;\n  isBlind: boolean;\n}\n\nconst GameQuestion = ({ word, isBlind }: Props) => {\n  if (!word) {\n    return null;\n  }\n\n  return (\n    <Box bg=\"green.400\" minWidth=\"100px\" textAlign=\"center\" fontWeight={600} p={2} color=\"white\" borderRadius=\"6\">\n      {isBlind ? Array.from({ length: word.length }).fill(' O ') : word}\n    </Box>\n  );\n};\n\nexport default GameQuestion;\n","import { Box, Text } from '@chakra-ui/react';\nimport './index.scss';\n\ninterface Props {\n  round: number;\n  totalRound: number;\n  isWaiting: boolean;\n}\n\nconst GameRound = ({ round, totalRound, isWaiting }: Props) => {\n  return (\n    <Box className=\"game-round\" textAlign=\"right\">\n      <Text fontSize=\"xs\" color=\"blackAlpha.600\">\n        라운드\n      </Text>\n      <Text color=\"blackAlpha.600\">\n        {isWaiting ? (\n          <Text as=\"strong\" color=\"blackAlpha.900\">\n            대기중\n          </Text>\n        ) : (\n          <>\n            <Text as=\"strong\" color=\"blackAlpha.900\">\n              {round}\n            </Text>{' '}\n            / {totalRound}\n          </>\n        )}\n      </Text>\n    </Box>\n  );\n};\n\nexport default GameRound;\n","export default __webpack_public_path__ + \"static/media/tick-tock.f2342ab4.mp3\";","import { Box, Text } from '@chakra-ui/react';\nimport { useEffect } from 'react';\nimport useSound from 'use-sound';\n\nimport tickTock from 'assets/sound/tick-tock.mp3';\nimport './index.scss';\n\ninterface Props {\n  timeCount?: number;\n  isWaiting: boolean;\n}\n\nconst GameTimer = ({ timeCount = 60, isWaiting }: Props) => {\n  // 10초 미만시 강조 컬러\n  const isNeedSpeedUp = timeCount < 10;\n  const isTimeout = timeCount === 0;\n\n  const [play, { stop }] = useSound(tickTock, {\n    playbackRate: 2,\n    interrupt: true,\n  });\n\n  useEffect(() => {\n    if (isNeedSpeedUp && !isTimeout) {\n      play({\n        forceSoundEnabled: true,\n      });\n    } else {\n      stop();\n    }\n    return () => {\n      stop();\n    };\n  }, [isNeedSpeedUp, isTimeout, play, stop]);\n\n  return (\n    <Box className=\"game-timer\">\n      <Text className=\"timer-emoji\">⏰</Text>\n      {isTimeout ? (\n        <Text fontSize=\"sm\" color=\"gray.500\">\n          시간초과!\n        </Text>\n      ) : (\n        <Text fontSize=\"xl\" fontWeight={600} color={isNeedSpeedUp ? 'red.500' : 'blackAlpha.900'}>\n          {isWaiting ? '∞' : timeCount}\n        </Text>\n      )}\n    </Box>\n  );\n};\n\nexport default GameTimer;\n","import { Box } from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\nimport cn from 'classnames';\nimport './index.scss';\n\ninterface Props {\n  color: string;\n  selected: boolean;\n  onClick?: (color: string) => void;\n}\n\nconst PaletteColor = ({ color, selected, onClick }: Props) => {\n  const isWhiteColor = color === '#ffffff';\n\n  return (\n    <Box className={cn('palette-card', { selected })} backgroundColor={color} onClick={() => onClick?.(color)}>\n      {selected && (\n        <span className=\"icon-checked\">\n          <CheckIcon color={isWhiteColor ? '#000' : '#fff'} w={3} h={3} />\n        </span>\n      )}\n    </Box>\n  );\n};\n\nexport default PaletteColor;\n","import { Slider, SliderTrack, SliderFilledTrack, SliderThumb } from '@chakra-ui/react';\nimport { DEFAULT_LINE_SIZE } from 'constants/index';\n\ninterface Props {\n  value?: number;\n  onSliderChange: (val: number) => void;\n}\n\nconst PaletteSlider = ({ value = DEFAULT_LINE_SIZE, onSliderChange }: Props) => {\n  return (\n    <Slider\n      aria-label=\"slider-ex-1\"\n      defaultValue={value}\n      min={1}\n      max={20}\n      colorScheme=\"teal\"\n      onChange={(val) => onSliderChange(val)}\n    >\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n};\n\nexport default PaletteSlider;\n","import { PROFILE_CHARACTERS } from 'constants/index';\nimport './index.scss';\n\ninterface Props {\n  index: number;\n  size?: number;\n}\n\nconst ProfileAvatar = ({ index = 0, size = 40 }: Props) => {\n  return (\n    <div className=\"profile-avatar\" style={{ width: `${size}px`, fontSize: `${size}px` }}>\n      {PROFILE_CHARACTERS[index]}\n    </div>\n  );\n};\n\nexport default ProfileAvatar;\n","import { Box, Heading } from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\n\nimport './index.scss';\n\ninterface Props {\n  children?: React.ReactNode;\n  title: string | React.ReactNode;\n}\n\nconst variants = {\n  initial: { opacity: 0, y: 30, scale: 0.85 },\n  visible: { opacity: 1, y: 0, scale: 1 },\n};\n\nconst ResultLayer = ({ children, title }: Props) => {\n  return (\n    <motion.div initial=\"initial\" animate=\"visible\" variants={variants} transition={{ duration: 0.3 }}>\n      <Heading mb={5} color=\"white\" textAlign=\"center\">\n        {title}\n      </Heading>\n      {children && (\n        <Box bgColor=\"white\" width={370} minHeight={200} borderRadius={6} padding={6} marginX=\"auto\">\n          {children}\n        </Box>\n      )}\n    </motion.div>\n  );\n};\n\nexport default ResultLayer;\n","import { Text } from '@chakra-ui/react';\nimport ResultLayer from '../ResultLayer';\n\nimport './index.scss';\n\ninterface Props {\n  isMyTurn: boolean;\n  word: string;\n  painterName: string;\n}\n\nconst NextTurnContent = ({ isMyTurn, word, painterName }: Props) => {\n  const PainterText = (\n    <Text as=\"p\" lineHeight={1.5}>\n      {painterName}님 차례에요!\n      <br />\n      이번 문제는\n      <Text m={2} color=\"green.300\" as=\"span\" textDecoration=\"underline\">\n        {word}\n      </Text>\n      입니다!\n    </Text>\n  );\n\n  const GamerText = (\n    <Text as=\"p\" lineHeight={1.5}>\n      <Text m={2} color=\"green.300\" as=\"span\" textDecoration=\"underline\">\n        {painterName}\n      </Text>\n      님이 그림 그릴 차례입니다!\n    </Text>\n  );\n\n  return <ResultLayer title={isMyTurn ? PainterText : GamerText} />;\n};\n\nexport default NextTurnContent;\n","import { useSelector } from 'react-redux';\nimport { select } from 'store';\nimport { Text, Badge } from '@chakra-ui/react';\nimport { ProfileAvatar } from 'pages/Room/components';\nimport ResultLayer from '../ResultLayer';\n\nimport './index.scss';\n\ninterface Props {\n  userList: Picasso.UserInfo[];\n  word: string;\n}\n\nconst CompleteContent = ({ userList, word }: Props) => {\n  const { correctUserList } = useSelector(select.gamePoint.state);\n\n  return (\n    <ResultLayer\n      title={\n        <>\n          정답은\n          <Text m={2} color=\"green.300\" as=\"span\" textDecoration=\"underline\">\n            {word}\n          </Text>\n          입니다!\n        </>\n      }\n    >\n      <ul className=\"result-score\">\n        {userList.map(({ nickName, userId, profileIndex }) => {\n          const currectUserInfo = correctUserList.find((user) => user.userId === userId);\n          return (\n            <li key={userId}>\n              <div className=\"rank-name\">\n                <ProfileAvatar size={20} index={profileIndex} />\n                <Text m={2} color={currectUserInfo ? 'green.400' : 'black'} as=\"strong\">\n                  {nickName} {currectUserInfo && '🎉'}\n                </Text>\n              </div>\n              <Badge className=\"rank-score\" colorScheme={currectUserInfo ? 'green' : 'gray'}>\n                <span>{currectUserInfo?.point ?? 0}</span> 점\n              </Badge>\n            </li>\n          );\n        })}\n      </ul>\n    </ResultLayer>\n  );\n};\n\nexport default CompleteContent;\n","import { useEffect } from 'react';\nimport { Text, Badge } from '@chakra-ui/react';\nimport cn from 'classnames';\nimport confetti from 'canvas-confetti';\n\nimport { ProfileAvatar } from 'pages/Room/components';\nimport { useSelector } from 'react-redux';\nimport { select } from 'store';\n\nimport ResultLayer from '../ResultLayer';\n\nimport './index.scss';\n\ninterface Props {\n  userList: Picasso.UserInfo[];\n}\n\nconst GameOverContent = ({ userList }: Props) => {\n  const { correctUserList } = useSelector(select.gamePoint.state);\n\n  useEffect(() => {\n    confetti({\n      particleCount: 100,\n      spread: 150,\n      zIndex: 1000,\n    });\n  }, []);\n\n  return (\n    <ResultLayer title=\"🎉 순위를 발표합니다!\">\n      <ul className=\"result-score\">\n        {userList.map(({ nickName, userId, profileIndex }, index) => {\n          const currectUserInfo = correctUserList.find((user) => user.userId === userId);\n          const isFirstUser = index === 0;\n          const isSecondUser = index === 1;\n          const isThirdUser = index === 2;\n\n          return (\n            <li key={userId} className={cn({ winner: isFirstUser })}>\n              <div className=\"rank-name\">\n                <span className=\"medal\">\n                  {isFirstUser && '🏅'} {isSecondUser && '🥈'} {isThirdUser && '🥉'}\n                </span>\n                <div className=\"avatar-wrap\">\n                  <ProfileAvatar size={25} index={profileIndex} />\n                  {isFirstUser && <span className=\"crown\">👑</span>}\n                </div>\n                <Text m={2} color=\"black\" as=\"strong\">\n                  {nickName} {isFirstUser && '🎉'}\n                </Text>\n              </div>\n              <Badge className=\"rank-score\" colorScheme=\"gray\">\n                <span>{currectUserInfo?.point ?? 0}</span> 점\n              </Badge>\n            </li>\n          );\n        })}\n      </ul>\n    </ResultLayer>\n  );\n};\n\nexport default GameOverContent;\n","import { Flex } from '@chakra-ui/react';\nimport {\n  GameQuestion,\n  GameRound,\n  GameTimer,\n  NextTurnContent,\n  CompleteContent,\n  GameOverContent,\n} from '../../components';\nimport { CanvasContainer } from '../../containers';\n\nimport { useSelector } from 'react-redux';\nimport { select } from 'store';\nimport { useMyTurn, usePainterInfo, useGameStatus } from '../../hooks';\nimport './index.scss';\n\nconst GameContentContainer = () => {\n  const { participants, userInfo } = useSelector(select.room.state);\n  const { time, questions, round } = useSelector(select.game.state);\n  const { correctUserList } = useSelector(select.gamePoint.state);\n  const isVisibleOverlayContent = useSelector(select.game.isVisibleOverlayContent);\n  const isCurrectUser = correctUserList.find((user) => user.userId === userInfo?.userId);\n\n  const { isWaiting, isStandByTurn, isComplete, isGameOver } = useGameStatus();\n  const painterName = usePainterInfo()?.nickName ?? '';\n  const isMyTurn = useMyTurn();\n  const word = isWaiting ? '한명 더 들어오면 시작 할 수 있어요!' : questions[round - 1];\n  const isBlind = !isWaiting && !isMyTurn && !isCurrectUser;\n\n  return (\n    <div className=\"game-content-container\">\n      <Flex className=\"header\" justifyContent=\"space-between\">\n        <GameTimer timeCount={time} isWaiting={isWaiting} />\n        <GameQuestion word={word} isBlind={isBlind} />\n        <GameRound round={round} totalRound={questions.length} isWaiting={isWaiting} />\n      </Flex>\n\n      <Flex className=\"body\" justifyContent=\"center\" alignItems=\"center\">\n        <CanvasContainer />\n\n        {isVisibleOverlayContent && (\n          <Flex className=\"overlay-wrap\" justifyContent=\"center\" alignItems=\"center\">\n            {isStandByTurn && <NextTurnContent isMyTurn={isMyTurn} word={word} painterName={painterName} />}\n            {isComplete && <CompleteContent userList={participants} word={word} />}\n            {isGameOver && <GameOverContent userList={participants} />}\n          </Flex>\n        )}\n      </Flex>\n    </div>\n  );\n};\n\nexport default GameContentContainer;\n","import { VStack, Center, Text } from '@chakra-ui/react';\nimport { PROFILE_CHARACTERS } from 'constants/index';\nimport { usePainterInfo } from '../../hooks';\n\nconst GameStatusContainer = () => {\n  const painterInfo = usePainterInfo();\n  return (\n    <Center height=\"100%\" p={3} bg=\"gray.500\" color=\"white\" borderRadius={6}>\n      <VStack>\n        {painterInfo ? (\n          <>\n            <Text fontSize=\"3xl\">🎨 {PROFILE_CHARACTERS[painterInfo.profileIndex]}</Text>\n            <Text>{painterInfo.nickName} 님이 그림 그릴 차례입니다!</Text>\n          </>\n        ) : (\n          <Text>게임 준비중입니다.</Text>\n        )}\n      </VStack>\n    </Center>\n  );\n};\n\nexport default GameStatusContainer;\n","import { useEffect } from 'react';\nimport { useAnimation } from 'framer-motion';\n\ninterface Props {\n  deps?: React.DependencyList;\n}\n\nconst useMotion = ({ deps = [] }: Props) => {\n  const controls = useAnimation();\n\n  useEffect(() => {\n    controls.start({\n      opacity: [0.5, 1],\n      scale: [0.7, 1.1, 1],\n      y: [15, -10, 0],\n      transition: {\n        delay: 1,\n        x: { type: 'spring', stiffness: 50, velocity: 50 },\n        default: { duration: 0.5 },\n      },\n    });\n\n    // eslint-disable-next-line\n  }, [controls, ...deps]);\n\n  return { controls };\n};\n\nexport default useMotion;\n","import { useState, useCallback, useMemo, useRef } from 'react';\nimport {\n  Container,\n  Heading,\n  Stack,\n  Input,\n  Button,\n  Divider,\n  Grid,\n  GridItem,\n  IconButton,\n  Text,\n  FormControl,\n} from '@chakra-ui/react';\nimport { BsArrowRightCircleFill, BsArrowLeft, BsArrowRight } from 'react-icons/bs';\nimport { GiPerspectiveDiceSixFacesRandom } from 'react-icons/gi';\nimport { motion } from 'framer-motion';\nimport { useMotion } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { Dispatch } from 'store';\nimport { getUuid, getRandomNumber } from 'helpers/utils';\nimport { setStorage, getStorage } from 'helpers/storage';\nimport { PROFILE_CHARACTERS, LOCAL_STORAGE } from 'constants/index';\nimport socket from 'core/socket';\n\nimport './index.scss';\n\ninterface Props {\n  roomId: string;\n}\n\nconst GateContainer = ({ roomId }: Props) => {\n  const randomIndex = getRandomNumber(PROFILE_CHARACTERS.length);\n  const [profileIndex, setProfileIndex] = useState(randomIndex);\n  const dispatch = useDispatch<Dispatch>();\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isPrevDisabled = useMemo(() => profileIndex === 0, [profileIndex]);\n  const isNextDisabled = useMemo(() => profileIndex === PROFILE_CHARACTERS.length - 1, [profileIndex]);\n  const defaultNickName = getStorage(LOCAL_STORAGE.NICK_NAME) || '';\n\n  // 프로필 설정 애니메이션\n  const { controls } = useMotion({ deps: [profileIndex] });\n\n  const getRandomProfile = useCallback(() => {\n    const index = getRandomNumber(PROFILE_CHARACTERS.length);\n    setProfileIndex(index);\n  }, [setProfileIndex]);\n\n  const handlePrevProfile = useCallback(() => {\n    setProfileIndex((index) => index - 1);\n  }, [setProfileIndex]);\n\n  const handleNextProfile = useCallback(() => {\n    setProfileIndex((index) => index + 1);\n  }, [setProfileIndex]);\n\n  const handleEnterRoom = useCallback(() => {\n    const nickName = inputRef.current?.value;\n    if (!nickName) {\n      alert('닉네임을 입력해주세요!');\n      return;\n    }\n\n    const userInfo: Picasso.UserInfo = {\n      userId: getUuid(),\n      nickName,\n      profileIndex,\n    };\n\n    socket.emit('join', { roomId, userInfo });\n    dispatch.room.setUserInfo(userInfo);\n    dispatch.room.setJoinedState(true);\n    setStorage(LOCAL_STORAGE.NICK_NAME, nickName);\n  }, [dispatch, roomId, profileIndex, inputRef]);\n\n  const handleKeyDown = useCallback(\n    (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        handleEnterRoom();\n      }\n    },\n    [handleEnterRoom]\n  );\n\n  return (\n    <Container alignContent=\"center\" className=\"gate-container\">\n      <FormControl>\n        <Stack spacing={5}>\n          <Heading as=\"h1\" size=\"xl\">\n            프로필 설정\n          </Heading>\n          <Input\n            variant=\"outline\"\n            placeholder=\"닉네임을 입력해주세요!\"\n            defaultValue={defaultNickName}\n            maxLength={15}\n            textAlign=\"center\"\n            ref={inputRef}\n            onKeyDown={handleKeyDown}\n            required\n          />\n\n          <Grid templateColumns=\"repeat(5, 1fr)\" alignItems=\"center\" gap={6}>\n            <IconButton\n              colorScheme=\"teal\"\n              aria-label=\"이전\"\n              icon={<BsArrowLeft />}\n              disabled={isPrevDisabled}\n              onClick={handlePrevProfile}\n            />\n            <GridItem colSpan={3} textAlign=\"center\">\n              <motion.div animate={controls}>\n                <Text fontSize=\"7xl\">{PROFILE_CHARACTERS[profileIndex]}</Text>\n              </motion.div>\n            </GridItem>\n\n            <IconButton\n              colorScheme=\"teal\"\n              aria-label=\"다음\"\n              icon={<BsArrowRight />}\n              disabled={isNextDisabled}\n              onClick={handleNextProfile}\n            />\n          </Grid>\n          <Button\n            rightIcon={<GiPerspectiveDiceSixFacesRandom />}\n            onClick={getRandomProfile}\n            colorScheme=\"teal\"\n            size=\"lg\"\n            variant=\"outline\"\n          >\n            랜덤 프로필\n          </Button>\n        </Stack>\n\n        <Stack spacing={5} mt={50}>\n          <Divider />\n          <Button\n            type=\"submit\"\n            rightIcon={<BsArrowRightCircleFill />}\n            colorScheme=\"teal\"\n            size=\"lg\"\n            variant=\"solid\"\n            onClick={handleEnterRoom}\n          >\n            입장하기\n          </Button>\n        </Stack>\n      </FormControl>\n    </Container>\n  );\n};\n\nexport default GateContainer;\n","import { useCallback } from 'react';\nimport { Flex, Spacer, Heading, IconButton } from '@chakra-ui/react';\nimport { IoExitOutline } from 'react-icons/io5';\nimport './index.scss';\n\nconst HeaderContainer = () => {\n  const handleExit = useCallback(() => {\n    window.location.href = './';\n  }, []);\n\n  return (\n    <Flex className=\"header-container\" h=\"100%\" p=\"4\" align=\"center\">\n      <Heading fontSize={20} color=\"#fff\">\n        Picasso\n      </Heading>\n      <Spacer />\n      <IconButton aria-label=\"Exit\" fontSize={20} icon={<IoExitOutline />} onClick={handleExit} />\n    </Flex>\n  );\n};\n\nexport default HeaderContainer;\n","import { useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Dispatch, select } from 'store';\nimport { isStorybook } from 'helpers/env';\n\nimport socket, { setupBaseInfo } from 'core/socket';\nimport event from 'core/event';\n\nconst SocketContainer = ({ roomId }: { roomId: string }) => {\n  const { userInfo } = useSelector(select.room.state);\n  const dispatch = useDispatch<Dispatch>();\n\n  const onGateIn = useCallback(\n    ({ participants }) => {\n      if (isStorybook) return;\n      dispatch.room.setSocketState(true);\n      dispatch.room.updateParticipants(participants);\n    },\n    [dispatch]\n  );\n\n  const onJoinUser = useCallback(\n    (data) => {\n      console.log('onJoinUser', data);\n      dispatch.room.updateParticipants(data.participants);\n      event.emit('join', data);\n    },\n    [dispatch]\n  );\n\n  const onLeaveUser = useCallback(\n    (data) => {\n      console.log('onLeaveUser', data);\n      dispatch.room.updateParticipants(data.participants);\n      event.emit('leave', data);\n    },\n    [dispatch]\n  );\n\n  const onMessage = useCallback((message: { type: string }) => {\n    console.log('onMessage', message);\n    event.emit(message.type, message);\n  }, []);\n\n  const bindSocket = useCallback(() => {\n    socket.emit('gate', roomId);\n    socket.on('gate', onGateIn);\n    socket.on('join', onJoinUser);\n    socket.on('leave', onLeaveUser);\n    socket.on('message', onMessage);\n  }, [roomId, onGateIn, onJoinUser, onLeaveUser, onMessage]);\n\n  useEffect(() => {\n    if (!userInfo) {\n      return;\n    }\n\n    const { userId } = userInfo;\n    setupBaseInfo({ roomId, userId });\n  }, [roomId, userInfo]);\n\n  useEffect(() => {\n    bindSocket();\n  }, [bindSocket]);\n\n  return null;\n};\n\nexport default SocketContainer;\n","import { useCallback } from 'react';\nimport { Grid, GridItem, Button, Stack } from '@chakra-ui/react';\nimport { PaletteSlider, PaletteColor } from 'pages/Room/components';\nimport { COLORS } from 'constants/index';\nimport { DrawingTools } from 'types/enums';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Dispatch, select } from 'store';\nimport { drawing } from '../CanvasContainer';\n\nimport './index.scss';\n\nconst ToolsContainer = () => {\n  const { currentColor, currentTool, currentSize } = useSelector(select.tools.state);\n  const dispatch = useDispatch<Dispatch>();\n\n  const handleDrawingTool = useCallback(\n    (name: DrawingTools) => {\n      if (name === DrawingTools.CLEAR_ALL) {\n        drawing.clearAll();\n        dispatch.tools.setTool(DrawingTools.PEN);\n      } else {\n        dispatch.tools.setTool(name);\n      }\n    },\n    [dispatch]\n  );\n\n  const handleColor = useCallback(\n    (color: string) => {\n      dispatch.tools.setColor(color);\n    },\n    [dispatch]\n  );\n\n  const handleSlider = useCallback(\n    (val: number) => {\n      dispatch.tools.setSize(val);\n    },\n    [dispatch]\n  );\n\n  return (\n    <Grid h=\"100%\" p=\"10px\" templateRows=\"repeat(3, 1fr)\" templateColumns=\"repeat(1, 1fr)\">\n      <GridItem w=\"100%\" mb={3} rowSpan={1} colSpan={1} className=\"tool-type-wrap\">\n        <Stack direction=\"row\" spacing={2} align=\"center\">\n          {Object.keys(DrawingTools).map((name) => (\n            <Button\n              key={name}\n              className={name}\n              isActive={name === currentTool}\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => handleDrawingTool(name as DrawingTools)}\n            >\n              {name}\n            </Button>\n          ))}\n        </Stack>\n      </GridItem>\n      <GridItem rowSpan={1} colSpan={1} mb={1}>\n        <PaletteSlider value={currentSize} onSliderChange={handleSlider} />\n      </GridItem>\n      <GridItem rowSpan={1} colSpan={1}>\n        {COLORS.map((color) => (\n          <PaletteColor key={color} color={color} selected={color === currentColor} onClick={handleColor} />\n        ))}\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default ToolsContainer;\n","import { useSelector } from 'react-redux';\nimport { select } from 'store';\nimport { Flex, Box, Badge, Text } from '@chakra-ui/react';\nimport { Skeleton } from '@chakra-ui/react';\nimport { ProfileAvatar } from 'pages/Room/components';\nimport cn from 'classnames';\nimport './index.scss';\n\nconst UserListContainer = () => {\n  const { participants } = useSelector(select.room.state);\n  const { painterId } = useSelector(select.game.state);\n  const { correctUserList } = useSelector(select.gamePoint.state);\n\n  if (!participants.length) {\n    return (\n      <ul className=\"user-list\">\n        {Array.from({ length: 1 }).map((_, index) => (\n          <li key={index}>\n            <Skeleton height=\"68px\" borderRadius={6} startColor=\"gray.500\" />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  return (\n    <ul className=\"user-list\">\n      {participants.map(({ userId, nickName, profileIndex, point = 0 }) => {\n        const currectUserInfo = correctUserList.find((user) => user.userId === userId);\n        const isPainter = painterId === userId;\n\n        return (\n          <li key={userId}>\n            <Flex\n              className={cn('profile-wrap', { painter: isPainter })}\n              bg=\"white\"\n              margin={2}\n              mb={4}\n              padding={2}\n              borderRadius={6}\n            >\n              <ProfileAvatar index={profileIndex} />\n              <Box ml=\"3\" width=\"100%\" overflow=\"hidden\">\n                <Text className=\"nickname\" fontWeight=\"bold\">\n                  {nickName}\n                </Text>\n                <Badge className=\"point\" borderRadius={4} colorScheme={currectUserInfo ? 'green' : 'gray'}>\n                  <span>{point}</span> 점\n                </Badge>\n              </Box>\n            </Flex>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default UserListContainer;\n","import { Container, Grid, GridItem } from '@chakra-ui/react';\nimport { createBreakpoints } from '@chakra-ui/theme-tools';\n\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { select } from 'store';\n\nimport PageTemplate from 'components/PageTemplate';\nimport {\n  SocketContainer,\n  GateContainer,\n  HeaderContainer,\n  GameContentContainer,\n  GameStatusContainer,\n  ChatContainer,\n  UserListContainer,\n  ToolsContainer,\n  DevLogContainer,\n} from './containers';\nimport { useMyTurn, useGameHandler, useGameSync, useGameStatus } from './hooks';\nimport { isNodeProdcution } from 'helpers/env';\nimport './index.scss';\n\nconst Room = () => {\n  const { roomId = '' } = useParams();\n  const { isJoined } = useSelector(select.room.state);\n  const { isWaiting } = useGameStatus();\n  const isMyTurn = useMyTurn();\n  useGameHandler();\n  useGameSync();\n\n  createBreakpoints({\n    sm: '480px',\n    md: '768px',\n    lg: '1024px',\n    xl: '1280px',\n  });\n\n  return (\n    <PageTemplate id=\"room\">\n      <SocketContainer roomId={roomId} />\n\n      {isJoined ? (\n        <Container p={0} maxW=\"100%\" className=\"joined\">\n          <Grid h=\"100vh\" templateRows=\"repeat(16, 1fr)\" templateColumns=\"repeat(15, 1fr)\" bg=\"gray.100\">\n            <GridItem rowSpan={{ base: 1 }} colSpan={{ base: 15 }} bg=\"purple.400\" className=\"head-section\">\n              <HeaderContainer />\n            </GridItem>\n\n            <GridItem rowSpan={{ base: 15 }} colSpan={{ base: 15 }} className=\"body-section\">\n              <Grid\n                w=\"100%\"\n                h=\"100%\"\n                gap={2}\n                padding={2}\n                templateRows=\"repeat(10, 1fr)\"\n                gridAutoFlow=\"column\"\n                justifyContent=\"center\"\n              >\n                <GridItem rowSpan={{ base: 10 }} colSpan={{ base: 2 }} borderRadius={6} bg=\"gray.300\" w=\"230px\">\n                  <UserListContainer />\n                  {!isNodeProdcution && <DevLogContainer />}\n                </GridItem>\n\n                <GridItem rowSpan={{ base: 10 }} colSpan={{ base: 10 }} borderRadius={6} bg=\"white\">\n                  <GameContentContainer />\n                </GridItem>\n\n                <GridItem rowSpan={{ base: 10 }} colSpan={{ base: 3 }} w=\"280px\">\n                  <Grid h=\"100%\" templateRows=\"repeat(10, 1fr)\" templateColumns=\"repeat(3, 1fr)\" gap={2}>\n                    <GridItem rowSpan={2} colSpan={3} bg=\"gray.100\" minHeight={150}>\n                      {isMyTurn || isWaiting ? <ToolsContainer /> : <GameStatusContainer />}\n                    </GridItem>\n                    <GridItem rowSpan={8} colSpan={3} borderRadius={6} bg=\"gray.300\">\n                      <ChatContainer />\n                    </GridItem>\n                  </Grid>\n                </GridItem>\n              </Grid>\n            </GridItem>\n          </Grid>\n        </Container>\n      ) : (\n        <GateContainer roomId={roomId} />\n      )}\n    </PageTemplate>\n  );\n};\n\nexport default Room;\n","import { useRef, useMemo, useEffect } from 'react';\nimport { extend, useLoader } from '@react-three/fiber';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nextend({ TextGeometry });\n\nconst fontsrc = 'fonts/Jua_Regular-picaso.json';\n\nconst Typo3D = ({\n  children,\n  style = '',\n  vAlign = 'center',\n  hAlign = 'center',\n  size = 1,\n  color = '#000000',\n  ...props\n}) => {\n  const font = useLoader(FontLoader, fontsrc);\n\n  const config = useMemo(\n    () => ({\n      font,\n      size: 3,\n      height: 0.5, //앞뒤 두께감\n      curveSegments: 1.5, //너무 높게하면 리렌더링 오래걸림\n      bevelEnabled: true,\n      bevelThickness: 1,\n      bevelSize: 0.1,\n      bevelOffset: 0.01,\n      bevelSegments: 10,\n    }),\n    [font]\n  );\n\n  /** 센터 정렬 */\n  const mesh = useRef(null);\n  useEffect(() => {\n    if (mesh.current) {\n      mesh.current.children[0].geometry.center();\n    }\n  }, [children]);\n\n  return (\n    <group ref={mesh} {...props} scale={[0.1 * size, 0.1 * size, 0.1]}>\n      <mesh>\n        <textGeometry attach=\"geometry\" args={[children, config]} />\n        <meshPhongMaterial shininess={200} color={color} attach=\"material\" />\n      </mesh>\n    </group>\n  );\n};\n\nexport default Typo3D;\n","import * as THREE from 'three';\nimport { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { useTexture } from '@react-three/drei';\n\ninterface Props {\n  position?: [number, number, number];\n  size?: number;\n}\n\nconst Image3D = ({ position, size = 1 }: Props) => {\n  const ref = useRef<THREE.Mesh>();\n\n  const materialImgs = useTexture([...Array(6)].map((_, i) => `textures/cube${i + 1}.jpg`));\n\n  useFrame(() => {\n    ref.current!.rotation.x += 0.005;\n    ref.current!.rotation.y += 0.005;\n  });\n\n  return (\n    <mesh ref={ref} position={position} scale={1}>\n      <boxGeometry args={[size, size, size]} />\n      {materialImgs.map((material, index) => {\n        return <meshBasicMaterial key={index} attachArray=\"material\" map={material} />;\n      })}\n    </mesh>\n  );\n};\nexport default Image3D;\n","import { useRef } from 'react';\nimport { Sphere, useTexture } from '@react-three/drei';\nimport { useFrame } from '@react-three/fiber';\nimport { Mesh } from 'three';\ninterface Props {\n  radius: number;\n  position?: [number, number, number];\n}\n\nconst Clouds = ({ radius, position }: Props) => {\n  const [earthClouds] = useTexture(['textures/earth-clouds.jpg']);\n  const cloudsRef = useRef<Mesh>(null);\n\n  useFrame(({ clock }) => {\n    if (!cloudsRef.current) return;\n    cloudsRef.current.rotation.y = clock.elapsedTime * 0.02;\n  });\n\n  return (\n    <Sphere ref={cloudsRef} args={[radius + 0.05, 32, 32]}>\n      <meshPhongMaterial transparent alphaMap={earthClouds} opacity={0.5} />\n    </Sphere>\n  );\n};\n\nexport default Clouds;\n","import * as THREE from 'three';\nimport { Color } from 'three';\nimport { useRef } from 'react';\nimport { Sphere, Stars, useTexture } from '@react-three/drei';\nimport { useFrame } from '@react-three/fiber';\nimport Clouds from '../Clouds';\n\ninterface Props {\n  radius: number;\n  position?: [number, number, number];\n}\n\nconst Earth = ({ radius = 1, position }: Props) => {\n  const ref = useRef<THREE.Mesh>();\n\n  const [earthSpecular] = useTexture(['textures/earth-specular.jpg']);\n\n  useFrame(() => {\n    ref.current!.rotation.y += 0.001;\n  });\n\n  return (\n    <group ref={ref} position={position} scale={1}>\n      <Clouds radius={radius} />\n      <Sphere args={[radius, 32, 32]}>\n        <meshPhongMaterial\n          attach=\"material\"\n          color=\"#489396\"\n          shininess={5}\n          map={earthSpecular}\n          specularMap={earthSpecular}\n          specular={new Color('#2BC6CF')}\n        />\n      </Sphere>\n      <Stars radius={100} depth={50} count={3000} factor={6} saturation={0} fade />\n    </group>\n  );\n};\n\nexport default Earth;\n","import * as THREE from 'three';\nimport { useEffect, useState } from 'react';\nimport { useFrame } from '@react-three/fiber';\n\nconst VEC = new THREE.Vector3();\nconst STEP_VALUE = 0.2;\n\nconst CameraControl = () => {\n  const [isAction, setIsAction] = useState(true);\n\n  useFrame((state) => {\n    isAction && state.camera.position.lerp(VEC.set(0, 0, 15), STEP_VALUE);\n  });\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsAction(false);\n    }, 1500);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return <mesh />;\n};\n\nexport default CameraControl;\n","import { Suspense } from 'react';\nimport { Button } from '@chakra-ui/react';\nimport { Canvas } from '@react-three/fiber';\nimport { TrackballControls } from '@react-three/drei'; //7.0.1 써 에러x\n\nimport Typo3D from './components/Typo3D';\nimport Image3D from './components/Image3D';\nimport Earth from './components/Earth';\nimport CameraControl from './components/CameraControl';\n\nimport './index.scss';\n\nconst About = () => {\n  return (\n    <div className=\"about-wrap\">\n      <Canvas camera={{ position: [20, 20, 300], fov: 30 }}>\n        <ambientLight />\n        <pointLight position={[10, 10, 10]} />\n\n        <Suspense fallback={null}>\n          <Image3D size={1.2} position={[0, 0.1, 0]} />\n          <mesh position={[0, 1.8, 0]}>\n            <Typo3D hAlign=\"left\" color={'#0e978c'} size={1.4} children=\"Picasso\" />\n          </mesh>\n\n          <Earth radius={2} position={[0, -3.4, 0]} />\n          <CameraControl />\n        </Suspense>\n\n        <TrackballControls panSpeed={0.4} minDistance={9} maxDistance={40} />\n      </Canvas>\n\n      <Button w=\"200px\" h=\"50px\" colorScheme=\"yellow\" size=\"lg\" fontWeight=\"bold\" variant=\"solid\">\n        <a href=\"https://github.com/maybe-picasso/picasso\" target=\"_blank\" rel=\"noreferrer\">\n          Github\n        </a>\n      </Button>\n    </div>\n  );\n};\n\nexport default About;\n","import { Routes, Route } from 'react-router-dom';\nimport Home from 'pages/Home';\nimport Room from 'pages/Room';\nimport About from 'pages/About';\nimport PATHS from './paths';\n\nconst AppRoutes = () => {\n  return (\n    <Routes>\n      <Route path={PATHS.HOME} element={<Home />} />\n      <Route path={PATHS.ROOM} element={<Room />} />\n      <Route path={PATHS.ABOUT} element={<About />} />\n    </Routes>\n  );\n};\n\nexport default AppRoutes;\n","import { Provider } from 'react-redux';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { store } from './store';\nimport AppRoutes from 'routes';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ChakraProvider>\n        <AppRoutes />\n      </ChakraProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}